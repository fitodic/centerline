[tox]
minversion = 3.7
envlist = lint,py{39,310,311,312},docs,manifest,pypi-description

[testenv]
description = run the test suite
usedevelop = true
setenv =
    PYTHONPATH = {toxinidir}
passenv =
    GDAL_VERSION
    CPLUS_INCLUDE_PATH
    C_INCLUDE_PATH
commands =
    python -m pip install GDAL=={env:GDAL_VERSION}
    coverage run pytest {posargs}
extras =
    dev
    test

[testenv:cleanup]
description = remove coverage files
deps =
    coverage
commands =
    coverage erase

[testenv:docs]
description = run sphinx to build the documentation
allowlist_externals=make
changedir={toxinidir}/docs
setenv =
    PYTHONPATH = {toxinidir}/src/centerline
deps =
    sphinx
commands =
    make {posargs:html}

[testenv:manifest]
basepython = python3
deps = check-manifest
skip_install = true
commands = check-manifest

[testenv:pypi-description]
basepython = python3
skip_install = true
deps =
    twine
    pip>=19.0.1
commands =
    pip wheel -w {envtmpdir}/build --no-deps .
    twine check {envtmpdir}/build/*

[testenv:lint]
basepython=python3
skip_install=true
deps =
    flake8
    isort
    black
commands =
    flake8
    isort . --check
    black --check .

[testenv:changelog]
description = build the changelog
basepython = python3
skip_install = true
deps =
    towncrier>=18.6.0
commands =
    towncrier {posargs}

[testenv:release]
description = build the changelog, bump the package version, commit and tag
basepython = python3
skip_install = true
allowlist_externals =
    git
    tox
passenv =
    HOME
deps =
    bumpversion>=0.5.3
commands_pre =
    tox -e changelog -- --yes
    git commit -m "Build changelog"
    bumpversion {posargs:minor}
commands =
    git push origin
    git push origin --tags


[testenv:build]
description = build the package
basepython = python3
isolated_build = True
skip_install = true
setenv =
    PYTHONPATH = {toxinidir}
requires =
    setuptools>=42.0.2
    wheel>=0.33.6
deps =
    build>=0.8.0
    twine>=3.1.1
commands =
    python -m build --sdist --wheel --outdir dist/ .
commands_post =
    twine check dist/*


[testenv:deploy]
description = build the package and deploy it to PyPI.org
basepython = python3
isolated_build = True
skip_install = true
setenv =
    PYTHONPATH = {toxinidir}
requires =
    setuptools>=42.0.2
    wheel>=0.33.6
deps =
    twine>=3.1.1
commands_pre =
    tox -e build
commands =
    twine upload {posargs} --repository centerline --skip-existing dist/*
